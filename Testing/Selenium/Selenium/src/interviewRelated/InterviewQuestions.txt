Testing Interview Questions

1. What is a use case?
Ans. A use case is a description of a particular use of the system by an actor or user. It defines all the steps or procedure to follow when a role/actor wants to achieve particular action with the system.
Example:
Use case: Customer wants to join loyalty program
Steps: 
1. Login to system
2. Read loyalty program instructions or T&C
3. Click join
4. Enter required details
5. Submit application

2. What is a test case?
Ans. A TEST CASE is a set of conditions or variables under which a tester will determine whether a system under test satisfies requirements or works correctly.

3. What is the main difference between Array and Array List?
Ans. Array will have fixed size once declared. Array size cannot be modified.
Array List will have dynamic size. It will change dynamically while more number of elements are added.

One more important diff is array can add both objects and primitives. But array list only adds objects. if you try to add primitives, it will convert them to objects and add to it.

4. What is partial class?
Ans. Partial class is the one which is generated by compiling a number of java files into a single class file. To declare a class as a partial class we need to use partial keyword before the class as shown below.

public partial class1{
}

public partial class1{
}

public partial class1{
}

public partial class1{
}

Now here we have declared 4 classed with the same name and has appended partial keyword before them. So when we compile the program the compiler creates a single class file by combining the code from the 4 partial java files.

5. Can severity and priority of a bug changes with time?
Ans. Priority can change with time but not severity. Once the severity of a particular bug is P2, then it will be P2 for life long.

6. What happens if we use two @BeforeSuite annotations in the class? Will it throw error or both will execute or only one will execute?
Ans. Only one @BeforeSuite will be executed and there may not be any sequence or idea on which one will be executed. It depends on the compiler decision at the time of execution. No error will be thrown.

7. In oop which helps the compiler process the objects differently based on their data types or class?
Ans. Polymorphism

8. In oop, which of the following is a synonym for function overloading?
Ans. Virtual Polymorphism

9. What happen when base class is privately inherited?
Ans. private members of the base class are not inherited
public members of the base class become private members of the derived class 
protected members of the base class become private members of the derived class 

10. Which function is defined in a class?
Ans. Member function

11. Which member functions are not inherited?
Ans. Private

12. In oop which function is given the same access as methods to private and protected data of a class?
Ans. Friend functions

13. Which concept provides facility of using object of one class inside another class?
Ans. Composition

14. What is the between @Beforetest and @Beforemethod?
Ans. @Beforemethod will be executed before every method execution
@BeforeTest will be executed before executing a method in the <test> tag.

The test tag is present in the testng.xml. Before entrring in to that test tag this @BeforeTest will be executed. This test tag can have any number of test cases written in seperate methods. For example if a test tag has 10 test cases. Then @BeforeTest will be executed once and @BeforeMethod will be executed ten times.

15. Can we create an object of abstract class?
No.

16. Lets say we have two interfaces with methods as shown below

Interface1{
Add();
}

Interface2{
Add1();
}

Now i have an abstract class which is implementing both the interfaces.

Abstract class class1 implements interface1, interface2{

}

In the above scenario, i need to implement both the add and add1 methods in this class. The question is i only want the compiler to show me only one method add1 for implementation. How can we do it?
Ans. If we create an object of abstract class by using reference of interface2.

Interface2 i2 = new class1();
i2.add1();

17. Difference between fluent wait and explicit wait?
Ans. Explicit wait will have a default polling time of 30 sec. Where as in fluent wait we can specify our own polling time.

18. Lets say there is an textbox in UI. I have written an xpath for it and the compiler will check for the text box to enter some text when the code is executed. At what case the compiler will not throw any error eventhough it wont find the element? It should not throw any error and go with the rest of the flow.
Ans. This happens when the element we r searching for is not present in main frame but it is present in a different frame. If we switch to that particular frame and then we search the element and then if we dont find the element then the compiler will throw the error. If you are in one frame and searching for element present in another frame the compiler wont throw an error eventhough the element is not present.

19. What is the difference between 200 and 201 response codes?
200 - OK. What ever request you have given is successfully executed. 
201 - Created. This is specific to POST request. When ever you give a post request it will create a new record and gives the response created. 

20. What are the different classes of selenium?

21. Why do we upcast any browser driver class object to WebDriver?
OR
Why do we not upcast to SearchContext or RemoteWebDriver?

A: In selenium, maximum time when we create an object of any browser driver class, we do upcast.

E.g. WebDriver driver= new FirefoxDriver();

Reasons are as below:

   1. You can launch any browser through single browser factory method. (We will see soon how)
   2. It is a good programming practice to upcast the object to maximum level possible keeping in mind that you should not loose important functionalities.
   3. If we upcast object to SearchContext, it will not be so feasible as it has only two methods. To use other important methods, we need to do down casting.
   4. Keeping 2nd point in mind, We can upcast till WebDriver as we are not making it difficult to use important methods because of major concept of overriding in java. So, we do not upcast to RemoteWebDriver.
   5. Remember, there is no such mandatory rule that you need to upcast or downcast. It is just way of proper programming.

22. Why do we downcast object execute javascript?

A: We do not downcast always to run javascript until object is upcasted to WebDriver i.e., no need to do downcasting in below case:
FirefoxDriver driver2= new FirefoxDriver();

We can run javascript directly because execute() method will be visible/accessible to driver2 object.

But, if we write as below:
WebDriver driver= new FirefoxDriver();
We must need to downcast it to JavaScriptExecutor to make execute() method visible to object.





